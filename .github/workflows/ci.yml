# .github/workflows/ci.yml
# Prérequis:
# - VM: /opt/brokerx contient docker-compose.prod.yml + deploy.sh (chmod +x)
# - Secrets GitHub: SSH_KEY (clé privée ed25519), VM_HOST=10.194.32.238, VM_USER=log430
# - Settings → Actions → General → Workflow permissions: Read and write permissions

name: ci
on:
  push:
    branches: [ main ]
  pull_request:

# éviter les runs parallèles inutiles
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write   # pour pousser l'image vers GHCR

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}   # ex: monicaDelao/brokerx → ghcr.io/monicaDelao/brokerx:latest

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Tests (unit/integration)
        run: ./app/gradlew -p app test --no-daemon --build-cache

  build_and_push_image:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image (GHCR)
        uses: docker/build-push-action@v6
        with:
          context: ./app
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  deploy_to_vm:
    if: github.ref == 'refs/heads/main'
    needs: build_and_push_image
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          install -m 700 -d ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts

      - name: Remote deploy (pull + up -d)
        run: |
          ssh -i ~/.ssh/id_ed25519 ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} \
            'cd /opt/brokerx && ./deploy.sh && docker compose ps'
